import pandas as pd

frame = pd.read_csv('dataset.tsv', sep='\t', header=0)
# print(frame)
# print(frame.dtypes)  # посмотреть тип таблицы.

frame.Birth = frame.Birth.apply(pd.to_datetime)  # Меняем тип данных столбца с обьекта на тип,
#                                                # удобный для работы  с датами

# print(frame.dtypes)

# print(frame)
# print(frame.info())  # Информация по нашей таблицы, что, кто, сколько памяти занимает , какие типы даных используется.

""" 
    Что бы изменить значение необходимой клетки в таблице, например 'None', можно использовать методо(fillna)
"""
frame.fillna('разнорабочий', inplace=True)
# print(frame)

""" Для вывода отдельного столбца, можно обратиться к нему по имени( как к методу)"""
# print(frame.Position)  # Данный вывод будте в формате обычного массива.
""" Что бы обратиться к столбцу в формате таблицы нужно :"""
# print(frame[['Position']])

# print(frame[['Name', 'Position']])


"""Анологично можно выводить несколько строк. ( можно сделать это несколькими способами )"""
# print(frame.head(3))
# print(frame[:3])
# print(frame[-3:])

"""
Для обращения по конкретным столбцам и строкам выделяя таким образом конкретные обьекты. 
Используется метод "lock"
"""
# print(frame.loc[[1, 3, 5], ['Name', 'City']])
""" Для обащения к тем же ячейкам но по индексам используется метод (.iloc)"""
# print(frame.iloc[[1, 3, 5], [0, 2]])


''' 
Для обращения и с индексами и с именами осей таблицы, можно использовать !!!!метод(.ix)!!!!! 
Он будет выводить как и по индексам так и по именам.
'''
print(frame)
